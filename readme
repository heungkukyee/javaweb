# HTML 프로젝트- 깃허브
새로운 시작! 웹 서비스 개발의 세계로 떠나보아요~

## Getting Started
This project is a starting point for a Web application.
- [프로젝트 메인 주소](https://github.com/heungkukyee/javaweb)

집에서 데스크탑으로 복습 후 깃허브에 업로드합니다.

## 2주차 수업 메인화면 개발 완료 (연습 문제 완료(데이터 수정))
## 3주차 수업 부트스트랩 적용 완료 (응용 문제 완료(테이블 수정), 연습 문제 완료(네비게이션 바, 테이블 색상 변경))
## 4주차 수업 자바스크립트 적용 완료 (응용 문제 완료(네비게이션 바 하이퍼링크 추가, 테이블 색상 변경), 연습 문제 완료(JS 수정))
## 5주차 수업 팝업창 적용 완료 (연습 문제 완료(검색창 문자열 검사))
## 6주차 수업 로그인 css 적용 완료 (응용 문제 완료(로그아웃 버튼 생성), 연습 문제 완료(JS, HTML 정리))
## 9주차 수업 입력 필터링 및 쿠키 적용 완료 (응용 문제 완료(로그인 입력 제한), 연습 문제 완료(문제 진행도 체크))
## 10주차 수업 쿠키 및 세션 적용 완료 (응용 문제 완료(로그아웃 및 세션 삭제), 연습 문제 구현(로그인 실패 카운트))
## 11주차 수업 암호화 및 토큰 적용 완료(응용 문제 완료(로그아웃 시 응용 문제 세션도 같이 삭제), 연습 문제 완료(토큰 삭제))
## 12주차 수업 모듈화 및 회원가입 적용 완료 (연습 문제 완료(회원가입 암/복호화))
## 13주차 수업 프로필 화면 및 오픈API로 카카오맵 적용 완료 (응용 문제1 완료(프로필 페이지 접근 제한), 응용 문제2 완료(마커에도 주소 출력)

1. 전체 실습 과정
    2주차: 기본 화면 작성(HTML에서 메뉴 텍스트, 로고 이미지, 메인 이미지, 텍스트 적용)
    3주차: 메타데이터 수정, 하이퍼링크(메인 이미지, 로고, 네비게이션 바 메뉴마다 하이퍼링크 추가), 테이블 만들기(테이블에 이미지, 하이퍼링크 추가 색 변경), 부트스트랩 추가
    4주차: 네비게이션 바 로고 추가, 반응형 메인 이미지 적용, JS 검색창 구현
    5주차: JS 데이터 타입 적용, 검색 기능 구현, 팝업창 구현(현재 시간 출력), 이미지 호버 구현
    6주차: 화살표 함수 적용, 재귀를 이용한 팝업 카운트다운 구현, 로그인 페이지 구현, 폼을 이용해 로그인 수행, 로그인 공백 체크 구현, index.html 구현
    9주차: 로그인 입력 길이 및 특수 문자 체크, XSS 방지 DOMPurify 라이브러리 연동, 쿠키 활용(팝업창 하루에 한 번만 열기), 쿠키 보안 적용 
    10주차: 쿠키 활용(아이디 기억 및 자동 입력), 세션 활용(로그인 유지), 세션 체크(로그인 시 로그인 화면 진입 불가)
    11주차: crypto-js 라이브러리를 이용한 암/복호화 적용, JWT 토큰 적용으로 로그인 후 상태 확인
    12주차: JS 모듈화 적용, 세션에 객체 저장, 회원가입 페이지 구현, 회원가입 JS 구현(class를 이용해 회원가입 정보 객체 저장), 회원가입 정보 입력 필터링 구현(한글 이름, 이메일 형식, 비밀번호 대소문자 및 특수문자 필터링, 약관 동의 체크 확인)
    13주차: 프로필 화면 구현(내 정보, 기술 스택 설정), 카카오맵 API를 이용해 카카오맵 구현

2. 응용/연습 문제 풀이 - 전체 완료
    2주차: 응용 문제: 주제 선정(철권8 웹사이트), 데이터 수정
    3주차: 응용 문제: 표 작성 완료(이미지, 하이퍼링크)
          연습 문제: 네비게이션 바 드랍다운 하이퍼링크 추가, 색상 변경, 테이블 색상 변경
    4주차: 응용 문제: 네비게이션 바 하이퍼링크, 색상 변경, 테이블 색상 적용
          연습 문제: 클릭 이벤트 식별자 수정(search_buttin_msg로 수정 후 클릭 id도 수정, 함수 중첩 시 나중에 적용된 함수 실행, alert를 이용해 문자열 출력)
    5주차: 연습 문제: 검색 창에 문자열 검사 구현(if문, 반복문, 배열 활용해 공백 및 비속어 검사)
    6주차: 응용 문제: index_login.html 구현
          연습 문제: JS 및 HTML 정리 및 소스 코드 들여쓰기(Prettier 적용)
    9주차: 응용 문제: 로그인 입력 길이 제한 수정, 패턴식 활용해 로그인 입력 제한 적용
          연습 문제: 전체 문제 체크(모든 응용/연습 문제 풀이 완료)
    10주차: 응용 문제1: 로그인/로그아웃 카운트 쿠키 구현
           응용 문제2: 세션 스토리지 로그아웃 구현(session_del 적용해 로그아웃 클릭 시 세션 삭제)
           연습 문제: 로그인 제한 구현(로그인 실패 카운트 후 3회 이상 실패 시 로그인 제한(로그인 버튼 비활성화))
    11주차: 응용 문제: 내장 라이브러리 활용해 AES-256-GCM 대칭 암/복호화 구현(crypto2 구현)
           연습 문제: 로그아웃 시 JWT 토큰 삭제 구현(removeItem 메소드 활용)
    12주차: 연습 문제: 회원가입 객체 정보 암호화해 세션에 저장, 로그인 후 복호화된 객체 내용 출력(세션이 없다면 출력 X)
    13주차: 응용 문제1 프로필 페이지 정보 수정(개인 사진, 기술 스택), 프로필 페이지 접근 제한 구현(세션에 로그인된 정보 검사 후 세션이 있으면 이동, 없으면 로그인 페이지로)
           응용 문제2: 카카오맵 좌표로 설정한 주소 출력(HTML, JS, CSS를 이용해 맵 설정)
           연습 문제: 기말 보고서 제출(소스코드 정리 및 체크)

3. 홈페이지 내용 수정
    홈페이지 주제: 철권8 웹페이지
    메뉴: 네비게이션 바에 주제와 맞는 메뉴 설정, 테이블에 사용 캐릭터와 사용 무술에 대한 설명 구현, 드랍다운 메뉴 추가
    링크: 네이게이션 바 메뉴마다 하이퍼링크 설정, 테이블에 사용 캐릭터 및 무술에 하이퍼링크 설정, 메인 이미지, 로고 이미지에 하이퍼링크 설정
    디자인: 실제 철권8 웹페이지와 비슷한 느낌으로 구현, 보편적인 웹페이지가 가지고 있는 구성 따르기

4. 소스 코드 정리
    모든 코드 들여쓰기(Prettier 사용)
    파일명 정리
    수정된 부분 주석으로 설명 추가
    추가 기능 구현(응용/연습 문제), 주석으로 응용/연습 문제 설명 추가
    세션삭제, 임포트 등 응용/연습 문제에서 구현한 부분 기본 페이지 연동
    사용하지 않는 부분 주석 처리(가시겅 확보를 위해 삭제)
